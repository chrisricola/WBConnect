[{"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/index.js":"1","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/App.js":"2","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Landing.js":"3","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Navbar.js":"4","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/auth/Register.js":"5","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/auth/Login.js":"6","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/store.js":"7","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/index.js":"8","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/alert.js":"9","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/types.js":"10","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/alert.js":"11","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Alert.js":"12","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/auth.js":"13","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/auth.js":"14","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/utils/setAuthToken.js":"15","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/Dashboard.js":"16","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/routing/PrivateRoute.js":"17","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/profile.js":"18","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/profile.js":"19","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Spinner.js":"20","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/CreateProfile.js":"21","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/DashboardActions.js":"22","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/EditProfile.js":"23","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/AddExperience.js":"24","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/AddEducation.js":"25","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/Experience.js":"26","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/Education.js":"27"},{"size":154,"mtime":1611362198620,"results":"28","hashOfConfig":"29"},{"size":1917,"mtime":1611882694934,"results":"30","hashOfConfig":"29"},{"size":1087,"mtime":1611730808820,"results":"31","hashOfConfig":"29"},{"size":1413,"mtime":1611729382863,"results":"32","hashOfConfig":"29"},{"size":2945,"mtime":1611640646264,"results":"33","hashOfConfig":"29"},{"size":1963,"mtime":1611640577044,"results":"34","hashOfConfig":"29"},{"size":402,"mtime":1611345790519,"results":"35","hashOfConfig":"29"},{"size":197,"mtime":1611711789331,"results":"36","hashOfConfig":"29"},{"size":406,"mtime":1611363932616,"results":"37","hashOfConfig":"29"},{"size":611,"mtime":1611881143405,"results":"38","hashOfConfig":"29"},{"size":377,"mtime":1611443913076,"results":"39","hashOfConfig":"29"},{"size":505,"mtime":1611375070359,"results":"40","hashOfConfig":"29"},{"size":2191,"mtime":1611733792073,"results":"41","hashOfConfig":"29"},{"size":1252,"mtime":1611881392986,"results":"42","hashOfConfig":"29"},{"size":252,"mtime":1611616133005,"results":"43","hashOfConfig":"29"},{"size":2059,"mtime":1611889117558,"results":"44","hashOfConfig":"29"},{"size":704,"mtime":1611710666343,"results":"45","hashOfConfig":"29"},{"size":886,"mtime":1611795345596,"results":"46","hashOfConfig":"29"},{"size":4801,"mtime":1611882709945,"results":"47","hashOfConfig":"29"},{"size":277,"mtime":1611732132047,"results":"48","hashOfConfig":"29"},{"size":5961,"mtime":1611796587229,"results":"49","hashOfConfig":"29"},{"size":682,"mtime":1611790393706,"results":"50","hashOfConfig":"29"},{"size":7231,"mtime":1611793620950,"results":"51","hashOfConfig":"29"},{"size":2970,"mtime":1611798052135,"results":"52","hashOfConfig":"29"},{"size":2987,"mtime":1611882701368,"results":"53","hashOfConfig":"29"},{"size":1590,"mtime":1611882703753,"results":"54","hashOfConfig":"29"},{"size":1575,"mtime":1611882681785,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1nifnj8",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/index.js",[],["116","117"],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/App.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Landing.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Navbar.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/auth/Register.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/auth/Login.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/store.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/index.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/alert.js",["118"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n\n  const { type, payload } = action;\n\n    switch(type) {\n        case SET_ALERT: \n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/types.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/alert.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Alert.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/auth.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/auth.js",["119"],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/utils/setAuthToken.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/Dashboard.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/routing/PrivateRoute.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/reducers/profile.js",["120"],"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true, \n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            };\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false\n            }\n        default: \n            return state;\n    }\n};","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/actions/profile.js",["121"],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/layout/Spinner.js",["122"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n    <Fragment>\n        <img \n        src={spinner}\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\n        alt= 'Loading...'\n        />\n    </Fragment>\n);","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/CreateProfile.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/DashboardActions.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/EditProfile.js",["123"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({ \n    profile: { profile, loading }, \n    createProfile, \n    getCurrentProfile, \n    history \n}) => {\n\n   const [formData, setFormData] = useState ({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n   });\n\n   const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n   useEffect(() => {\n       getCurrentProfile();\n\n       setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram\n    });\n   }, [loading]);\n\n   const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n   } = formData;\n\n   const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n   const onSubmit = e => {\n       e.preventDefault();\n       createProfile(formData, history, true);\n   }\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\"\n          value={company} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\"\n          value={website} onChange={e => onChange(e)} />\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" \n          value={location} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" \n          value={skills} onChange={e => onChange(e)}/>\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" \n          value={bio} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && <Fragment>\n            <div className=\"form-group social-input\">\n          <i className=\"fab fa-twitter fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" \n          value={twitter} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-facebook fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" \n          value={facebook} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-youtube fa-2x\"></i>\n          <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"\n          value={youtube} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" \n          value={linkedin} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-instagram fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" \n          value={instagram} onChange={e => onChange(e)}/>\n        </div>\n            </Fragment>}\n\n        \n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n        </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n\n});\n\nexport default connect(\n    mapStateToProps,\n     { createProfile, getCurrentProfile }\n     )(withRouter(EditProfile));","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/AddExperience.js",["124","125"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history}) => {\n\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { company, title, location, from, to, current, description } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    return (\n        <Fragment>\n           <h1 class=\"large text-primary\">\n       Add An Experience\n      </h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form class=\"form\" onSubmit={e => {\n          e.preventDefault();\n          addExperience(formData, history);\n      }}>\n        <div class=\"form-group\">\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\"\n           value={title} onChange={e => onChange(e)} required />\n        </div>\n        <div class=\"form-group\">\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\"\n          value={company} onChange={e => onChange(e)} required />\n        </div>\n        <div class=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\"\n          value={location} onChange={e => onChange(e)} />\n        </div>\n        <div class=\"form-group\">\n          <h4>From Date</h4>\n          <input type=\"date\" name=\"from\" \n          value={from} onChange={e => onChange(e)}/>\n        </div>\n         <div class=\"form-group\">\n          <p><input type=\"checkbox\" name=\"current\" checked={current}\n          value={current} onChange={e => {\n              setFormData({ ...formData, current: !current });\n              toggleDisabled(!toDateDisabled);\n          }}/> {' '} Current Job</p>\n        </div>\n        <div class=\"form-group\">\n          <h4>To Date</h4>\n          <input type=\"date\" name=\"to\"\n          value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\n        </div>\n        <div class=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description} onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\n        <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n      </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addExperience })(AddExperience) \n","/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/profile-forms/AddEducation.js",["126","127"],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/Experience.js",[],"/Users/chrisrico/Desktop/Homework/WBConnect/WBConnect/client/src/components/dashboard/Education.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":5,"column":1,"nodeType":"134","endLine":17,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":19,"column":1,"nodeType":"134","endLine":55,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":11,"column":1,"nodeType":"134","endLine":38,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":172,"column":19,"nodeType":"137","messageId":"138","endLine":172,"endColumn":22},{"ruleId":"132","severity":1,"message":"139","line":4,"column":1,"nodeType":"134","endLine":12,"endColumn":3},{"ruleId":"140","severity":1,"message":"141","line":49,"column":7,"nodeType":"142","endLine":49,"endColumn":16,"suggestions":"143"},{"ruleId":"135","severity":1,"message":"144","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"145","line":2,"column":16,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"144","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"145","line":2,"column":16,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["148"],"'Link' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"151","text":"152"},[1677,1686],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]